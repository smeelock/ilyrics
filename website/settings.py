"""
Django settings for website project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

# pwd = "C5v2rjQ4V3FpwIfm7Lhr"

from pathlib import Path
import os
import json
import elasticsearch
from requests_aws4auth import AWS4Auth # aws authentication

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['DJANGO_SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["https://ilyrics.herokuapp.com"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # added
    # 'haystack',
    'django_elasticsearch_dsl',

    # custom apps
    'searchApp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'website.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["/templates/"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'website.wsgi.application'

# AWS IAM authentication
ACCESS_KEY = os.environ['AWS_ES_ACCESS_KEY']
SECRET_KEY = os.environ['AWS_ES_SECRET_KEY']
REGION = os.environ['AWS_REGION']
AWS_HOST = os.environ['AWS_ES_HOST']
awsauth = AWS4Auth(ACCESS_KEY, SECRET_KEY, REGION, 'es')

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# postgresql
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ['AWS_RDS_NAME'],
        'USER': os.environ['AWS_RDS_USER'],
        'PASSWORD': os.environ['AWS_RDS_PASSWORD'],
        'HOST': os.environ['AWS_RDS_HOST'],
        'PORT': "5432",
    }
}

# tried postgresql with IAM authentication, but failed...
# DATABASES = {
#     'default': {
#         'ENGINE': 'django_iam_dbauth.aws.postgresql',
#         'HOST': "<host>",
#         'USER': '<username>',
#         'NAME': "<name>",
#         'OPTIONS': {
#             'use_iam_auth': True,
#             'region_name': REGION,
#             'sslmode': 'require',
#         },
#     },
# }

# sqlite
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

# ElasticSearch-dsl
ELASTICSEARCH_DSL = {
    'default': {
        'hosts': [{'host': AWS_HOST, 'port': 443}],
        'http_auth' : awsauth,
        'use_ssl' : True,
        'verify_certs' : True,
        'connection_class' : elasticsearch.RequestsHttpConnection
    },
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
